<?xml version="1.0" encoding="UTF-8"?>
<!--
     Copyright 2005-2015 Red Hat, Inc.
     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>io.fabric8.quickstarts</groupId>
    <artifactId>swarm-rest-example</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Fabric8 :: Quickstarts :: Swarm :: Simple REST endpoint </name>
    <description>REST Service running in a standalone Java Swarm Container</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- This image doesn't work as jolokia logger is different from WildFly
        <docker.from>docker.io/fabric8/java-jboss-openjdk8-jdk:1.0.13</docker.from>
        -->

        <http.port>8080</http.port>

        <docker.from>docker.io/java:openjdk-8-jdk</docker.from>
        <docker.image>fabric8/${project.artifactId}:${project.version}</docker.image>
        <docker.port.container.http>${http.port}</docker.port.container.http>
        <docker.port.container.jolokia>8778</docker.port.container.jolokia>

        <!-- Kubernetes Metadata -->
        <!-- Service -->
        <fabric8.service.name>${project.artifactId}</fabric8.service.name>
        <fabric8.service.port>${http.port}</fabric8.service.port>
        <fabric8.service.containerPort>${http.port}</fabric8.service.containerPort>
        <fabric8.service.type>LoadBalancer</fabric8.service.type>

        <fabric8.readinessProbe.httpGet.port>${http.port}</fabric8.readinessProbe.httpGet.port>
        <fabric8.readinessProbe.httpGet.path>/service/say/pong</fabric8.readinessProbe.httpGet.path>
        <fabric8.readinessProbe.timeoutSeconds>30</fabric8.readinessProbe.timeoutSeconds>
        <fabric8.readinessProbe.initialDelaySeconds>5</fabric8.readinessProbe.initialDelaySeconds>

       <!-- &lt;!&ndash; Volume &ndash;&gt;
        <fabric8.volume.v1.hostPath>/var/log</fabric8.volume.v1.hostPath>
        <fabric8.volume.v1.mountPath>/var/log</fabric8.volume.v1.mountPath>-->

        <!-- Labels -->
        <fabric8.label.group>quickstart</fabric8.label.group>

        <!-- Maven -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-docker-plugin.version>0.15.16</maven-docker-plugin.version>

        <camel.version>2.17.3</camel.version>
        <fabric8.maven.plugin.version>3.1.64</fabric8.maven.plugin.version>
        <wildfly-swarm.version>2016.10.0</wildfly-swarm.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- WildFly Swarm BOM -->
            <dependency>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>bom-all</artifactId>
                <version>${wildfly-swarm.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Fabric8 bom -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project-bom-with-platform-deps</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-parent</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Swarm -->
        <dependency>
             <groupId>org.wildfly.swarm</groupId>
             <artifactId>management</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>swagger</artifactId>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-arquillian</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.4.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- Swarm -->
            <plugin>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>wildfly-swarm-plugin</artifactId>
                <version>${wildfly-swarm.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <debug>${debug.port}</debug>
                    <mainClass>io.obsidian.quickstart.swarm.MainApp</mainClass>
                </configuration>
            </plugin>

            <!-- Generate Docker Image -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${maven-docker-plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.image}</name>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                </ports>
                            </run>
                            <build>
                                <from>${docker.from}</from>
                                <ports>
                                    <port>${docker.port.container.http}</port>
                                </ports>
                                <assembly>
                                    <basedir>/opt</basedir>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <includes>
                                                    <include>${project.build.finalName}-swarm.jar</include>
                                                </includes>
                                                <directory>${project.build.directory}</directory>
                                                <outputDirectory>/</outputDirectory>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                                <entryPoint>
                                    <shell>java -jar /opt/${project.artifactId}-swarm.jar</shell>
                                </entryPoint>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>

            <!-- Fabric8 Tool to package/deploy on Openshift/Kubernetes -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.version}</version>
                <executions>
                    <execution>
                        <id>json</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>json</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <excludes>
                        <exclude>**/*KT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>debug</id>
            <properties>
                <debug.port>5555</debug.port>
            </properties>
        </profile>

        <profile>
            <id>openshift-build</id>
            <build>
                <defaultGoal>clean install docker:build fabric8:json</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>openshift-local-deploy</id>
            <properties>
                <fabric8.recreate>true</fabric8.recreate>
            </properties>
            <build>
                <defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>maven-central</id>
            <name>Maven Central</name>
            <url>http://repo2.maven.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>maven-restlet</id>
            <name>Public online Restlet repository</name>
            <url>http://maven.restlet.org</url>
        </repository>
    </repositories>

</project>
